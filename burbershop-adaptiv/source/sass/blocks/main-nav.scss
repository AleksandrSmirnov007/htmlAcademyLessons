


.main-nav {
  position: relative; // подготовливаем почву для позиционирования main-nav__toggle а также в открытом виде будем позицонировать main-nav__wrapper по абсолюту к main-nav
  width: auto; // непонятно зачем
  min-height: 51px; // высота одного пункта меню
  background-color: #826550; // удобнее взять из стайлгайда
}

.main-nav__toggle {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  display: block;
  width: 70px;
  height: 50px;
  background-color: #6a4d38;
  cursor: pointer;
  border: none;
  &:hover,
  &:active {
    background-color: #624530;
  }
}
/// пишем изображение кнопки "бургера" (такое изображение при закрытом меню)
.main-nav--closed .main-nav__toggle::before {// если на теге nav вместе main-nav с классом висит еще класс модификатор main-nav--closed значит меню  находиться в закрытом состоянии и кнопка должна имет изобрадение три полоски (или по другому вид бургера) так вот в этом случае создаем псевдоэлемент в виде одной полоски (самой верхней) а нижние полоски добавляем к этой полоске как тени(тем самым кнопка не нуждается в загрузке картинки)
  position: absolute;
  top: 15px;
  left: 17px;
  content: "";
  width: 36px;
  height: 2px;
  background-color: #ffffff;

  box-shadow: 0 8px 0 0 #ffffff,
              0 16px 0 0 #ffffff; // box-shadow: смещение_по_горизонтали смещение_по_вертикали размытие увеличение размера цвет;
}

//  в состоянии нажатия на кнопку прозрачность рисунка 30%
.main-nav--closed .main-nav__toggle:active::before { // при нажатии у псевдоэлемнта и его теней  меняем белый цвет на белый с 30% процентов прозрачностью
  background-color: rgba(255, 255, 255, 0.3); // в Less используется функция fade Установка абсолютной непрозрачности цвета. Может применяться к цветам независимо от того, имеют они уже значение непрозрачности или нет. В scss пока аналога не нашел пока сделаю через rgba
  box-shadow: 0 8px 0 0 rgba(255, 255, 255, 0.3),
              0 16px 0 0 rgba(255, 255, 255, 0.3);
}

//открытие и закрытие должно быть реализовано только в мобильной версии

@media (max-width: $mobile-width-only) { // нужно обратить внимание что тут именно MAX-width делаем отображение текущего пункта меню
  .main-nav--closed .site-list__item {
    display: none; // скрываем все элементы списка

    &--active {  // используем класс модификатор присваемый текущему пункту меню
      display: block; // задаем ему вместо display: none;

    }
  }

  .main-nav--closed .site-list__item--active a { // задаем непосредстенно ссылке, это связано с вопросом об величине области взоимодействия с элементов // непонятно посему нспользуют класс ссылки, а используют вложенный селектор
    padding-right: 70px; // теперь текст пунктов меню не наедет на кнопку меню
    padding-left: 70px; // возьмем и слева такой же отступ что бы проще отцентровать п горизонтали
    text-align: center; // пункты в меню отцентрированы погоризонтали
  } // если поменять класс main-nav--closed на класс .main-nav--opened(при открытом меню) то эти правила не применятся

  .main-nav--closed .user-list__item { // так же скрываем user-list (кнопка "войти")
    display: none;
  }
}


.main-nav--opened .main-nav__wrapper { //В открытом меню обёртка выпадает из потока, все пункты открыты.
  position: absolute;
  top: 0;
  right: 0; // растягиваем так как ширина не задана
  left: 70px; // справа соглассно макету отступ широной с ширину кнопки
  z-index: 10; // что бы наверняка всплыло на всеми элементами и был запас для индексов ниже
  min-height: 80vh; // пусть высота составлянет 80% от высоты вьюпорта
  background-color: #6a4d38;

  &::before { // затеняем левый край как на мекете наклвдывя сверху прозрачный псевдоэлемент с внутренней тенью
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 8px;
    box-shadow: inset 4px 0 7px -2px rgba(0, 0, 0, 0.4); // РАСШИФРОВАТЬ И НАЧАЬТЬ ОТСЮДА
    z-index: 2;

  }
}

// Пропишем изображение на кнопке в виде креста при открытом main-nav
.main-nav--opened .main-nav__toggle {
  top: 0; // позиционируем в левом верхнем углу кнопку при открытом меню
  left: 0;
  right: auto; // ставим по умолчанию ьак как было задано

  &::before,
  &::after {
    position: absolute; // позиция тела кнопки отлична от position: static и псевдо элемент before спозиционируется от него
    content: "";
    width: 36px; //ширина и выстота креста 26 находим гипотенузу корень квадр из (26*26 + 26*26)
    height: 2px;
    background-color: #ffffff;
    border-radius: 2px;
    top: 24px; // 50(высщта кнопки)/2 - 2(высота палки)/2 Центрируем обе палки по вертикали
    left: 17px; //70(ширина кнопки) - 36 (ширина палок) итого 34рх лелим на два отступа по обоим сторонам поровну. Итого 17рх
  }

  &::before{
    transform: rotateZ(45deg); // по умолчанию вращается по оси Z
    box-shadow: none; //
  }
  &::after {
    transform: rotate(-45deg);
  }
}

.main-nav--opened .main-nav__toggle:active::before,
.main-nav--opened .main-nav__toggle:active::after {
  background-color: rgba(255, 255, 255, 0.3);
}

.main-nav__wrapper {
  @media (min-width: $tablet-width) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    width: 640px;
    margin: 0 auto;
  }

  @media (min-width: $desktop-width) {
    width: 960px;

  }
}

.main-nav__list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.main-nav__list a {
  color: #ffffff;
}
