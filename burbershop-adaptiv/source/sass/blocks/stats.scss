.stats {
  background-color: $darkgrey;
  color: #ffffff;
}

.stats__wrapper {
  @media (min-width: $tablet-width) {
    $stats-shift: -179px; // Создадим локальную переменную, которая будет хранить значение смещения. на 179px блок залезает на предыдущий блок .page-header 
    padding: 0 64px;
    position: relative;
    top: $stats-shift; // при position: relative; свойство top: -179px; сместит вверх относительно своего положения  при этом все остальные элементы в потоке не изменят своего положения 
    margin-bottom: $stats-shift; // нижний отступ у .stats__wrapper будет отрицательным тем самым stats__wraper подтянул бы в себя нижний блок но так он уже смещен вверх относительно своего положения в потоке то визуально нижний блок пойдет сразу без промежутка // хотя на данном этапе это выглядит странно так как фон от <section> stats налезает на фон <section> advantages 
    
  }

  @media (min-width: $desktop-width) {
    margin: auto;
    max-width: 960px;

    display: grid;
    grid-template-columns: 1fr 2fr;
  }
}

.stats__header {
  padding: 28px 20px;
  background-color: #ffffff;
  color: #000000;
  @media (min-width: $tablet-width) {
    position: relative; // зададим шапке position: relative, чтобы спозиционировать декоративный уголок слева.
    padding-top: 32px; // я на макете увидел 25рх
    padding-right: 34px;
    padding-left: 34px;
    padding-bottom: 30px;
    display: grid;
    grid-template-columns: 1fr 1fr; // в планшетной версии stats__header разделяется на две колонки

    &::before { // создадим псевдоэлемент для декративного уголка сбоку
      content: "";
      position: absolute;
      width: 23px;
      height: 23px;
      top: 42px; // я насчитал 35рх (высота блока 179рх - растояние от нижней границы блока до нижней границы декоративного элемента 121рх  - высота деоративного элемента 23px = растоянию от верхней границы псевдоэлемента до верхней границы stats__header (по другому там не померить в виду особенности дизайна
      left: -23px;
      // background-color: red;  // это фоновый цвет взят для наглядности что бы проверить наш псевдоэлемент
      //Заменим фоновый цвет SVG-картинкой, вставленной прямо в стили с помощью data URI. В атрибуте points описаны точки, из которых собирается треугольник.
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3Cpolygon points='0,0 1,0 1,1' fill='white'/%3E%3C/svg%3E");
    }
  }
  @media (min-width: $desktop-width) {
    grid-template-columns: auto; //сбрасываем (было 1fr 1fr)
    grid-template-rows: min-content 1fr min-content; //  тем самым прибьем нижний элемент к нижней границе родителя за счет того что средний болк займет все возможное пространство
    align-content: start; // непонятно зачем, так как изнально так и было
  }
}

.stats__slogan {
  margin: 0;
  margin-bottom: 13px;
  color: #000;
  text-align: center;
  font-size: 30px;
  font-weight: bold;
  line-height: 1; /* 100% */
  text-transform: uppercase;

  @media (min-width: $tablet-width) {
    font-size: 40px;
    text-align: left;
    margin-bottom: 17px; // я измерил -  24рх(может макет поменяли)
    text-transform: none;
  }
  @media (min-width: $desktop-width) {
    margin-bottom: 32px; // на макете 38px(может поменяли макет);
  }
}

.stats__intro {
  margin: 0;
  text-align: center;

  color: #000;
  text-align: center;
  font-size: 20px;
  line-height: 1.35; /* 135% */

  @media (max-width: $mobile-width-only) {
    br {
      display: none;  // теи самым уберем тегт br, но только для мобильной версии
    }
  }
  @media (min-width: $tablet-width) {
    padding-top: 4px; // разница между отступами сверху (25px и 29 px) получается что stats__intro будет ниже чем stats__slogan на 4рх
    padding-left: 34px; // растояние от отсередины так как у нас grid-template-columns: 1fr 1fr;
    text-align: left;
  }
  @media (min-width: $desktop-width) {
    padding-left: 0;
    margin-bottom: 16px;
  }
}

.stats__legend {
  margin: 0;
  display: block; // в верхний элементе этот класс находится в теге p. А в нижнем элементе этот класс находится в теге small(display: inline;) Доделаем легенду: сделаем блочной в ситуации, когда это просто <small> и опишем свойства текста, общие и для нижней, и для верхней вариаций.
  font-size: 20px;
  line-height: 1; /* 100% */
}

// Добавим модификатор верхней легенды в стили и вложим в селектор медиавыражение: при мобильной ширине она будет спрятана.
.stats__legend--top {
  color: fade-out(#000000, 0.3);
  @media (max-width: $mobile-width-only) {
    display: none;
  }
}

.stats__legend--bottom {
  text-align: center;
  color: fade-out(#ffffff, 0.30);
  @media (min-width: $tablet-width) {
    display: none;
  }
}

.stats__list {
  margin: 0;
  margin-bottom: 20px;
  background-color: #353535; // возмем за основной цвет хотя, практически у каждого элемента свой цвет (зададим позже)
  @media (min-width: $tablet-width) {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
  @media (min-width: $desktop-width) {
    margin: 0; //непонятно зачем... в демонстрации "уберем нижний отступ у списка" но изначально там и так обнуляется все маржины
  }
}

.stats__item {
  padding: 20px;
  display: flex;
  justify-content: space-between;
  @media (min-width: $tablet-width) {
    display: block;
    padding-top: 25px;
    padding-left: 34px;
    padding-right: 34px;
    padding-bottom: 30px;
  }
}

.stats__item:nth-child(1) {
  background-color: rgba(45, 38, 130, 0.05);
  @media (min-width: $tablet-width) {
    background-color: fade-out(#ffffff, 0.95);
  }
}

.stats__item:nth-child(2) {
  background-color: fade-out(#ffffff, 0.88); /// задаю для тренировки через функции scss потренироваться вобщем background-color: rgba(255, 255, 255, 0.12); тоже самое что и background-color: fade-out(#ffffff, 0.88);
}

.stats__item:nth-child(4) {
  background-color: fade-out(#ffffff, 0.88); /// в макете идет #fffffff, 12%
  @media (min-width: $tablet-width) {
    background-color: fade-out(#ffffff, 0.95);
  }
}
.stats__number {
  // color задается через stats
  font-size: 40px;
  font-weight: bold;
  line-height: 1; /* 100% */

  sup {
    position: static; // непонял зачем, изначально так же position: static;
    vertical-align: baseline; //стандартно от браузера тег sup имеет vertical-align: supper;
    margin-left: 5px; // растояние слева от звездочки до числа
    font-size: inherit; // размер шрифта пусть наследует у stats__number // стандартно от браузера тег sup имеет font-size: small; vertical-align: supper;
  }

  @media (min-width: $tablet-width) {
    font-size: 72px;
    margin-bottom: 12px;
  }
}

.stats__description {
  // color задается через stats
  margin: 0;
  text-align: right;
  font-size: 18px;
  line-height: 1; /* 100% */
  @media (min-width: $tablet-width) {
    text-align: left;
    font-size: 20px;

    br {
      display: none;
    }
  }
}
