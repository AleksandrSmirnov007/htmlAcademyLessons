// этот юлок стилизуем после блока page
// сам тег header имеет свойство display: block; и па ширине равен body, a body по ширине равен html, а html по ширине равен ширине вьюпорта ИТОГО  <header>...</header> (он же класс .page-header) по ширине равен ширине вьпорта. Это нас устраивает и смысла стилизовать хеадер нет. поэтому начнем сразу с page-header__nav   

.page-header__nav {
  @media (max-width: $mobile-width-only) { // только для мобильной версии (для ширины равной или меньше 767px) 
    border-bottom: 1px solid $special_grey-5; // добавляет нижнюю границу серым цветом в 1px для навигаации. Такие же граница для элементов списка навигации потом сделаем в вверху в топе
  }

  // при не заданной ширине .page-header__nav занимает всю ширину  <header>, а также <body> , а также <html> , а также вьюпорта и это нас устраивает, но только для мобильной версии. а для плоншетов и шире добавим следующее:
  @media (min-width: $tablet-width) {
    width: 708px; // так как page-header__nav меньше <header>, а также <body> , а также <html> , а также вьюпорта на два отпупа по 30px расчет: (768px - 2*30px)
    margin: 0 auto; // это правило будет центровать по горизонтали page-header__nav относительно  <header>, а также <body> , а также <html> , а также вьюпорта при ширине экрана больше 768px
    padding: 24px 0; // логотип у нас находиться на растоянии 24px от верхнего края ну зададим одинаковые верхний и нижний паддинги для блока.
    display: grid; // строим сетку в page-header__nav для ширины экрана 768px
    grid-template-columns: 174px 1fr; // 174px потомучто первый элемент сетки логотип и его ширина по макету 174px, а меню занимает все простанство справа от него пусть будет 1fr и его ширина будет тянутиься до границ родителя
    gap: 16px; //   добавим промежуток между элементами, пусть всего 16px, а меню сайта (главная, каталог продукции, подбор программы) выравним по правому краю потом.
  }

  @media (min-width: $desktop-width) { // для версии десктопа ничего тогда не поменяется кроме ширины page-header__nav ширина экрана 1440px, но блок будет меньше на ширину отступов справа и слева 110px*2 Итого: 1440-110*2=1220 px 
    width: 1220px;
  }
}

.page-header__bar { 
  @media (max-width: $mobile-width-only) { // только для мобильной версии (для ширины равной или меньше 767px) 
    width: 320px; // что бы при увеличении ширины элементы лого и кнопка вызова меню все равно оставались на одном растоянии друг от друга
    margin: 0 auto; // центрируем элемент по горизонтали отностиельно родительского блока(page-header__nav который тянется на всю ширину <header>, а также <body> , а также <html> , а также вьюпорта)
    padding: 12px 20px 13px;
    display: grid; // элемент page-header__bar включает в себя элементы .page-header__logo(внутри которого два элемента лого) и .page-header__toggle 
    grid-template-columns: 34px 1fr 34px; // задали симметричную сетку по горизонтали. 34px это ширина левого элемента в блоке лого, кнопка же шириной 24px. Но нам нужна симметричная сетка(тогда центральтный элемент можно выставить по центру например с помошь правила justify-self: center;  поэтому крайние столбцы делаем одинаковыми, равными ширине, равной ширине самого широкого 34px.Однако так как блок лого сосотоит из двух элементов нужно разместить его в первых двух столбцах и построить в нем сетку стобцов 34px и 1fr . Тогда сетко лого совпадет с сеткой .page-header__bar в первых двух столбцах и выравние по точно центру будет возможно.
    gap: 16px; // тут промежуток скорее для приличия -  визуально ничего не изменится.
    align-items: center; // выравнивание элементов по вертикали по центру
  }
}

.page-header__logo {
  grid-column-start: 1; // использую такую форму правил  потому, что sass поймет к примеру grid-colomn: 1 / 3; как арифметические действия и в css пойдет не правильное выражение grid-column: 0.33333... наверно но попрововал оказалось в css идет grid-column: 1/3; правильно.
  grid-column-end: 3; // этими двумя правилами мы расположили лого в первых двух столбцах из трех слобцов в page-header__nav;
  // также нам надо будет построить похожую сетку в блоке logo но только на два столбца (это мы сделаем в файле logo.scss)
}
