
.catalog-sections {
  padding-top: 20px;

  @media (min-width: $tablet-width) {
    padding-top: 0;
  }
}

.catalog-sections__container {
  @media (min-width: $desktop-width) { // на ширине для планшетов секции каталога выстраиваются в две колонки между которыми растояние  80px(используем для этого gap)
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 80px;
  }
}

.catalog-sections__item {
  position: relative; // для позиционирования зеленых кружков с изображениями. Но это только в планшетной версии смотри далее.
  padding: 24px 20px 21px; // 24px растояние от верхнего края зеленого кружка до верхней границы серого фона, 20px  отступ слева (отступ справа 33px по макету ну тут это не учитываю) 18px отступ от ссылки снизу до нижней границы серого фона
  background-color: $basic_grey;
  // серый фон только на элементах catalog-sections__item

  @media (min-width: $tablet-width) {
    padding: 71px 311px 62px 53px;
  }

  @media (min-width: $desktop-width) {
    padding-top: 47px;
    padding-left: 52px;
    padding-right: 53px;
    padding-bottom: 63px;
  }

  & + & { // селектор "соседний комбинатор" если рядям идут два элемнта на одном уровне то стили указанные в скобказх применяются ко второму
    margin-top: 21px; // здесь и далее применяется ко второму .catalog-sections__item

    @media (min-width: $tablet-width) {
      margin-top: 30px;
    }

    @media (min-width: $desktop-width) {
      margin-top: 0; // отсутп второго элемента не жужен, так как теперь они находятся не друг под другом
    }
  }
}

.catalog-sections__heading {
  position: relative; // изображение и зеленый кружок будет привязан к этому элементу для этого задали position: relative а зеленому кружку зададим position: absolute; -  Он позиционируется относително .catalog-sections__heading, но это просматривается только для мобильной и десктопной версии, для планшетной версии зеленый круг позиционируется отностиельно .catalog-sections__item. далее опишем в коментарии около медия запроса для планшетной версии
  min-height: 50px; // высота зеленого круга 50px и блок недолжен быть меньше
  margin: 0; //  убираем вертикальные маржины изначально идущие с h3 */
  margin-bottom: 22px; // растояние от нижней границы зеленого круга до следушего за ним вниз текста
  padding-left: 70px; // ширина круга 50px + 19px по горизонтали от круга до заголовка заготавливаем место для круга и изображения в круге( 69px взяли ближайшеее четное)
  display: flex; // это не необходимо для выравнивания содержимого(надписи заголовка) роано по серединие по вертикали в блоке теперь h3 стало флекс контейнером а надпись флекс элементом
  align-items: center; // теперь применяется выравнивание по вспомогательной оси т. е. по веритикали(такак ось основная ось в флексконтейнере направлена в право, а всомогательная вниз и соответсвенно вертикально.


  font-family: $font-heading;
  font-weight: 400;
  font-size: 24px;
  line-height: 37px;
  text-transform: uppercase;

  @media (min-width: $tablet-width) {
    margin-bottom: 16px;
    position: static; // статик позиционирование по умолчанию согласно месту в html. Т есть возвращаем к начальным настрйкам позиции и теперь наш асолютно спозиционированнный кружок будет для местополажения брать за ориентир элемент .catalog-sections__item потому что ему мы преварительно задали position: relative;.
    padding-left: 0; // обнуляем паддинг так круг для планшетной версии в уже другом месте и отступ для него не требуется.
    font-size: 36px;
  }

  @media (min-width: $desktop-width) {
    position: relative; // Возобновляем позиционированире зеленого круга слева от заголовка в десктопной версии.
    padding-left: 162px; // ширина круга 100px + отступ до заголовка 62px.
    min-height: 100px; // высоту равняем по высоте круга как и мобильной версии но оставимм возможность расти при наполнении.
    margin-bottom: 39px;
  }

  &::before,
  &::after {
    position: absolute;
    content: "";
  }

  &::before { // используем ::before что бы создать подложку под декоративное изображение блока в виде зеленого круга, а само декоративное изображение реалтзуем через ::after.
    top: 0;
    left: 0;
    background-color: $color-primary;
    border-radius: 50%;

    @include size(50px); // смотреть в файле mixins.scss. По сути это просто заменяет две строки width: 50px; height: 50px;.

    @media (min-width: $tablet-width) {
      @include size(200px);  // ширина = высота = 200px.
      top: 92px;
      right: 61px; // о праваго края круга до правого края серого фона (по макету 62 px);.
      left: auto; // задавая снова left мы перебиваем выше заданное значение left: 0;.
    }

    @media (min-width: $desktop-width) { // позиционируем зеленый круг для десктопов.
      @include size (100px); // задаем через mixin размеры зеленого круга в версии десктопа т. е. ширина = высота = 100px.
      top: calc(50% - 50px);  // 50 % это половина высоты родителя (.catalog-sections__heading) 50px это половина высоты псевдоэлемента таким образом псевдоэлемент всега будет центрирован по вертикали относительно .catalog-sections__heading.
      right: auto; // возвращаем начальное значение правому отступу так как снова будем позиционировать от левого края.
      left: 0; // привязываем к левому краю родителя.
    }
  }

  &::after { // приступим к позиционированию декоративных изображений.
    background-size: contain; // Если вы используете background-size: contain, то фоновое изображение уменьшается, чтобы все изображение поместилось на панели предварительного просмотра. В принципе можно не уточнять background-size и background-repeat изображение занимает весь блок и так а размеры его пропорцинальны блоку.
    background-repeat: no-repeat;
  }
}

.catalog-sections__heading--slim { //модификатор для установки декоративного изображения картинка сидящего кота
  &::after {
    @include size (36px, 50px); // размеры через mixin
    top: -3px; // по макету выше на 3px относительно кружка
    left: 7px; // по макету левеее на 7px относительно кружка
    background-image: url("../img/icons/cat-slim.svg");

    @media (min-width: $tablet-width) { // для планшета
      @include size (140px, 194px); // размер у фоновой картинки изменился
      top: 81px;
      left: auto; // сбрасываем отступ слева.
      right: 92px; // а справа устанвливаем отступ согласно макету для планшета
    }

    @media (min-width: $desktop-width) { // для десктопа
      @include size (70px, 97px); // размер у фоновой картинки изменился
      top: calc(50% - 56px); // позиционирование отностилено .catalog-sections__heading но выше на 6px значит от 50% отнимаем не 50px,  а 56px
      left: 15px; // сбрасываем отступ слева.
      right: auto; // а справа устанавливаем отступ согласно макету для десктопа
    }
  }
}

.catalog-sections__heading--pro { // аналогично для cat-pro катинка идущего кота
  &::after { // начальные настройки и они же для мобильной версии
    @include size (67px, 28px);
    top: 11px; // позиционируется относисительно .catalog-sections__heading по итогу будет ниже на 11px зеленого круга
    left: -9px;
    background-image: url("../img/icons/cat-pro.svg");

    @media (min-width: $tablet-width) { // для планшета
      @include size (268px, 112px); // размер у фоновой картинки изменился
      top: 135px; // позиционирование отностительно от верхней границы .catalog-sections__item, но и по вертикали находится в середине зеленого круга который тоже позиционируется тоже от .catalog-sections__item, по формуле 50%-100px (100px половина высоты круга), поэтому для картинки от 50% отнимаем половину высоты картинки 112/2=56 и она также как и зеленый круг выроняется по середине по вертикали внутри .catalog-sections__item(так как .catalog-sections__heading для этой ширины имеет position: static и псевдоэлемент позиционируется не от него, а от .catalog-sections__item так ранее ему было задано position: relative)
      left: auto; // сбрасываем отступ слева.
      right: 28px; // а справа устанвливаем отступ согласно макету для планшета
    }

    @media (min-width: $desktop-width) { // для планшета
      @include size (134px, 56px); // размер у фоновой картинки изменился
      top: calc(50% - 30px); // позиционирование отностилено .catalog-sections__heading но на 20px значит от 50% отнимаем не 50px,  а 50-20=30px
      left: -19px; // сбрасываем отступ слева.
      right: auto; // а справа устанавливаем отступ согласно макету для десктопа
    }
  }
}


.catalog-sections__text {
  margin: 0; // обнуляем станлартные отсутпа у тега p
  padding-bottom: 23px; // задаем паддинг  так как внузу есть есть серая черта - пусть это будет нижняя граница .catalog-sections__text
  margin-bottom: 18px; // еще ниже на 15px после границы идет следуюший элемент  - ссылка
  color: $special_dark-grey;
  border-bottom: 1px solid $special_grey-4;

  @media (min-width: $tablet-width) {
    color: $black; // цыет текста черный на ширине планшета и более
    border-bottom: none; // серая черта на этой ширине не нужна
    padding-bottom: 0; // паддинг который делался для черты не нужен тоже
    margin-bottom: 57px; // осталя один марджин - изменяем его
  }

  @media (min-width: $desktop-width) {
    margin-bottom: 32px; // измемняется отступ еще раз на ширине десктопа
  }
}


.catalog-sections__link {
  font-family: $font-heading;
  color: $black;
  font-size: 16px;
  line-height: 16px;
  text-decoration: none;
  text-transform: uppercase;

  display: grid;
  grid-template-columns: max-content 32px; // делаем сетку для надпси и стрелки рядом с надписью
  align-items: center; // выравниваем по середине по вертикали
  gap: 15px; // растояние между надписью и стрелкой

  &::after { // создаем псевдо элемент
    content: "";
    width: 24px; // ширина короткой стрелки из макета, но мы ипользуем фоновое изображение длинной стрелки, спозиционированное к правой границе элемента по горизонтали(и по вертикали - по центру) теперь если мы увеличим ширину псевдоэлемента до 32px то увидим спрятанную часть хвоста стрелки и стрелка вырастет как и положено по стайл-гайду. При состояниях :hover :active срелка растет и псевдоэлементу можно задать ширину 32px и этого будет достаточно для изменения размера стрелки
    height: 10px; // высота экспортируемой стрелки из макета
    background-image: url("../img/icons/icon_arrow.svg");
    background-position: 100% 50%; // позиционирование фона: по горизонтали 100%  - первый параметр по Х и 100% значит что примыкает к правому краю( если был 0(%) то к левому), по вертикали по У по середине
    background-repeat: no-repeat; // в пиниципе это можно не писать так как размер элемента будет меньше или равен с размеру картинки и повторений картинки мы не увидим
    // размеры можно не писать - размеры картинки указаны в svg
  }

  &:hover::after {
    width: 32px; //при навелении элемент расширяется и бекграунд виден полностью и создается ощузение что стрелка удлиняется
  }

  &:active {
    opacity: 0.3;
  }

  @media (min-width: $tablet-width) { // для планшетов и шире размер шрифта 20px;
    font-size: 20px;
    line-height: 20px;
    gap: 24px;
  }
}
