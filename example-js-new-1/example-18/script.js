
async function f() {
  return 1;
}


// продолжть разбор
// https://learn.javascript.ru/async-await

// У слова async один простой смысл: эта функция всегда возвращает промис. Значения других типов оборачиваются в завершившийся успешно промис автоматически. Например, эта функция возвратит выполненный промис с результатом 1:

// асинхронная фунция вернет промис
// а промис можно обработать через then
f().then((data) => {console.log(data)}); // выведет 1

// Так что ключевое слово async перед функцией гарантирует, что эта функция в любом случае вернёт промис. Согласитесь, достаточно просто? Но это ещё не всё. Есть другое ключевое слово – await, которое можно использовать только внутри async-функций.

// Ключевое слово await заставит интерпретатор JavaScript ждать до тех пор, пока промис справа от await не выполнится. После чего оно вернёт его результат, и выполнение кода продолжится. В этом примере промис успешно выполнится через 1 секунду:

const funcAsync = (sec) => {
  console.log(`старт асинхронной функции на ${sec} секунд`);
  async function fff () {
    let promise = new Promise((resolve, reject) => {
      setTimeout(() => resolve('готово'), sec * 1000);
    });

    let result = await promise;

    console.log(`Финиш асинхронной функции на ${sec} секунд`);
  };
  fff();
};





const funcSync = (sec) => {
  console.log(`старт Cинхронной функции на ${sec} секунд`);
  function fff () {
      setTimeout(console.log(`Финиш Cинхронной функции на ${sec} секунд`), sec * 1000);
    };
  fff();
};

// funcAsync(6);
// funcAsync(5);
// funcAsync(3);

// /// Стартанут одновременно закончаться по времени 3, 5, 6 секунд

funcAsync(6);
funcSync(4);
funcAsync(5);
funcAsync(3);

// сработали не так как я ожидал
// log: "старт асинхронной функции на 6 секунд"


// log: "старт Cинхронной функции на 4 секунд"


// log: "Финиш Cинхронной функции на 4 секунд"


// log: "старт асинхронной функции на 5 секунд"


// log: "старт асинхронной функции на 3 секунд"


// log: 1


// log: "Финиш асинхронной функции на 3 секунд"


// log: "Финиш асинхронной функции на 5 секунд"


// log: "Финиш асинхронной функции на 6 секунд"

