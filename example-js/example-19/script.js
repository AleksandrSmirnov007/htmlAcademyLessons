// Переходим к варианту № 2, задача прежняя.

// В этот раз мы попробуем использовать уже существующую разметку, а точнее мы сохраним пункты с нужными эмоциями. Для сохранения используем DocumentFragment.

// Нам по-прежнему потребуется метод .forEach(), только реализация колбэк-функции будет иной.

const userEmotions = [
  'smile',
  'crying',
];

const emojiContainer = document.querySelector('.emojis'); // находим контейнер с элементами эмоджи. опять забыл точку перед классом

console.log('emojiContainer: ' +  emojiContainer);
const emojiListFragment = document.createDocumentFragment(); // просто какойто фрагмент (мето для промежуточного хранения элементов)

// Для решения задачи мы найдём все пункты списка, совпадающие с элементами массива эмоций userEmotions, и сложим их во фрагмент.

// Конечно, если такие пункты списка существуют. Чтобы проверить это, добавим условие if.

// Обратите внимание, мы не используем .cloneNode(true) перед вставкой во фрагмент, чтобы это были именно те же самые пункты списка. Даже видно, что они пропали со страницы.


userEmotions.forEach((userEmotion) => {
  const emojiListItem = emojiContainer.querySelector('.emoji--' + userEmotion);    // передаем в переменную найденный элемент поиск организован по классу который состоит изприставки модификатора и конкатинации каждого элемента массива userEmotions в каждой итерации метода forEach

// добавим проверку если emojiListItem содержит что-то(элемент) пусть это добавится в наш фрагмент, при хорошем совпадении элементов массива userEmotions с нашими элементами с разметки html проверка не нужна, но если найдется несовпадение элемнтямассива и querySelector выдаст null то этот null попадет во фрагмент и произойдет ошибка. Поэтому проверка здесь необходима
  if(emojiListItem) {
    emojiListFragment.appendChild(emojiListItem);
    console.log(emojiListItem);
  }
});

console.log(emojiListFragment);


// А дальше всё, что нам остаётся, это удалить ненужные пункты из списка и вставить на их место фрагмент, где мы заботливо сохранили нужные, задача решена.

emojiContainer.innerHTML = '';
emojiContainer.appendChild(emojiListFragment);

// Ещё раз о минусах:

// не всегда получится обойтись без .cloneNode(true). Ведь иначе мы «портим» шаблон;

// приходится перекладывать DOM-элементы во фрагмент, а после вставлять обратно.

// Плюсы:

// тоже просто;

// не завязываемся на разметку в JavaScript-коде.
